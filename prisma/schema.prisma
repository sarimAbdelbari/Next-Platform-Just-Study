generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String            @id @default(uuid())
  email     String            @unique
  password  String
  name      String?
  accounts  ProviderAccount[]
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  files     File[]            @relation("UserFiles")
  role      Role              @default(USER)
}

model ProviderAccount {
  id                String   @id @default(uuid())
  provider          String // e.g., "google", "github"
  providerAccountId String // Unique ID returned by the provider
  userId            String
  user              User     @relation(fields: [userId], references: [id])
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  @@unique([provider, providerAccountId]) // Ensure no duplicate accounts for the same provider
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id           String       @id @default(uuid())
  name         String
  uploadStatus UploadStatus @default(PENDING)
  url          String
  key          String
  hash         String      
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  user         User?        @relation("UserFiles", fields: [userId], references: [id])
  userId       String?

  @@unique([userId, name]) // Enforce uniqueness of file names per user
}

enum Role {
  USER
  PREMIUMUSER
  ADMIN
}